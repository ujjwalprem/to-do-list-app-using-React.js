{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\React\\\\to-do-list\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\desktop\\\\react\\\\to-do-list\\\\src\\\\components\\\\ToDoItem.jsx\";\nimport React, { useState } from \"react\";\n\nfunction ToDoItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDone = _useState2[0],\n      setIsDone = _useState2[1];\n\n  function handleClick() {\n    setIsDone(function (preValue) {\n      return !preValue;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: isDone ? \"line-through\" : none\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  }, props.text), \";\");\n}\n\nexport default ToDoItem;","map":{"version":3,"sources":["C:/Users/KIIT/desktop/react/to-do-list/src/components/ToDoItem.jsx"],"names":["React","useState","ToDoItem","props","isDone","setIsDone","handleClick","preValue","textDecoration","none","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA,kBAEMF,QAAQ,CAAC,KAAD,CAFd;AAAA;AAAA,MAEbG,MAFa;AAAA,MAELC,SAFK;;AAGpB,WAASC,WAAT,GAAsB;AAClBD,IAAAA,SAAS,CAAC,UAAAE,QAAQ,EAAG;AACjB,aAAO,CAACA,QAAR;AACH,KAFQ,CAAT;AAKH;;AAEL,sBAAQ;AAAK,IAAA,OAAO,EAAED,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR;AAAI,IAAA,KAAK,EAAE;AAACE,MAAAA,cAAc,EAACJ,MAAM,GAAE,cAAF,GAAmBK;AAAzC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DN,KAAK,CAACO,IAAlE,CADQ,MAAR;AAGG;;AACH,eAAgBR,QAAhB","sourcesContent":["import React, { useState } from \"react\";\r\nfunction ToDoItem(props){\r\n\r\n    const [isDone, setIsDone]=useState(false);\r\n    function handleClick(){\r\n        setIsDone(preValue =>{\r\n            return !preValue;\r\n        }\r\n       \r\n        );\r\n    }\r\n\r\nreturn( <div onClick={handleClick}>\r\n<li style={{textDecoration:isDone ?\"line-through\" : none}}>{props.text}</li>;\r\n</div>\r\n);}\r\nexport  default ToDoItem;"]},"metadata":{},"sourceType":"module"}